// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc295.GrizzlynatorBase.commands;

import edu.wpi.first.wpilibj.command.Command;

/**
 * Must be careful that the Paddle is fully retracted before trying to shoot
 * again.
 * 
 * If the Paddle is not retracted, we will not start the shooter motor. The
 * CmdShooterPaddleDefault will resume retracting the paddle And hopefully
 * completes before the shoot is attempted again
 */
public class CmdShooterPaddleActivate extends Command
{

	public CmdShooterPaddleActivate()
	{
		// requires(Robot.sysShooterPaddle);
		// setTimeout(.5);
	}


	// Called just before this Command runs the first time
	@Override
	protected void initialize()
	{
		// if (Robot.sysShooterPaddle.isRetracted() == true)
		// {
		// Robot.sysShooterPaddle.startShoot();;
		// }
	}


	// Called repeatedly when this Command is scheduled to run
	@Override
	protected void execute()
	{
	}


	// Make this return true when this Command no longer needs to run execute()
	@Override
	protected boolean isFinished()
	{
		return isTimedOut();
	}


	// Called once after isFinished returns true
	@Override
	protected void end()
	{
		// Robot.sysShooterPaddle.stopPaddle();
	}


	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	@Override
	protected void interrupted()
	{
		end();
	}
}
